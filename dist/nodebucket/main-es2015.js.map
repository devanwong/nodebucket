{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/auth-layout/auth-layout.component.ts","./src/app/shared/auth-layout/auth-layout.component.html","./src/environments/environment.ts","./src/app/shared/auth.guard.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/shared/base-layout/base-layout.component.ts","./src/app/shared/base-layout/base-layout.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["/*\n============================================\n; Title: home.component.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: home component page\n;===========================================\n*/\n// this was auto generated. \nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- this is hte home.html page -->\n<div fxLayout=\"column\" class=\"main-welcome\">\n    <h1 class=\"title\">\n      Welcome to WEB 450's - nodebucket Project <br />\n      <span class=\"subtitle\">\n        Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait until the last minute to begin working on each item.\n      </span>\n    </h1>\n  </div>\n  ","/*\n============================================\n; Title: auth-layout.component.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: auth-layout page\n;===========================================\n*/\n// this was grabbed from https://github.com/buwebdev/web-450/tree/master/starter-projects/nodebucket\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- this is the authlayout page. -->\n<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*\n============================================\n; Title: auth.guard.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: auth guard typescript \n; ng g g auth --> can activate\n;===========================================\n*/\n// This was auto generated \nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n// import cookie service \nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  // adding the constructor so we can import the cookie service \n  constructor(private router: Router, private cookieService: CookieService){}\n\n  // canActivate has to return a true or false value.\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot) //: Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree \n    {\n    // Call the cookieservice with .get() to find the cookie that is added to the browser once the user signs into the app\n    const sessionUser = this.cookieService.get('session_user');\n    // If statement is used to check if something is being returned from the session. If true then there is a user logged in. Else is empty then renavigate to the sign in component.  [needs to have a return false ]\n    if(sessionUser) {\n      return true;\n    }\n     else {\n      this.router.navigate(['/session/login']);\n      return false;\n     }\n  }\n}\n","/*\n============================================\n; Title: login.component.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: login component page\n;===========================================\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private router: Router, private cookieService: CookieService, private http: HttpClient, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      empId: [null, Validators.compose([Validators.required, Validators.pattern('^[0-9]*$')])]\n    })\n  }\n  login() {\n    const empId = this.loginForm.controls['empId'].value;\n    console.log(empId);\n\n    this.http.get('/api/employees/' + empId).subscribe(res => {\n      if (res['data'])\n      {\n        this.cookieService.set('session_user', empId, 1);\n        this.router.navigate(['/']);\n      }\n      else if (!(res['data']) && (res['httpCode'] === '200'))\n      { \n        this.openSnackBar('Invalid employeeId, please try again', 'WARNING');\n      }\n      else \n      {\n        this.openSnackBar(res['message'], 'ERROR');\n      }\n    })\n  }\n  openSnackBar(message: string, notificationType: string) : void\n  {\n    this.snackBar.open(message, notificationType, {\n      duration: 3000,\n      verticalPosition: 'top'\n    })\n  } \n}\n","<!-- this is the login component html page. -->\n<div fxLayout=\"column\">\n    <mat-card fxFlex class=\"mat-elevation-z8 login-container\">\n        <mat-card-title class=\"login-title mat-headline\">Employee Login</mat-card-title>\n        <mat-card-subtitle class=\"login-subtitle mat-headline\">You must enter a valid numerical employeeID to proceed</mat-card-subtitle>\n        <mat-card-content>\n            <mat-card class=\"mat-elevation-z0\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n                <!-- this is the start of the form and will be reset once submit clicks. -->\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login(); loginForm.reset()\">\n                    <mat-card-content>\n                        <mat-form-field fxFlex>\n                            <input matInput\n                                [formControl]=\"loginForm.controls['empId']\"\n                                placeholder=\"EmployeeID\" />\n                                <!-- validation that requires an input field that is connected to the database. -->\n                            <mat-error *ngIf=\"loginForm.controls['empId'].hasError('required') && loginForm.controls['empId'].touched\">EmployeeID is a required field.</mat-error>\n                                <!-- validation that requires only numbers  -->\n                            <mat-error *ngIf=\"loginForm.controls['empId'].hasError('pattern') && loginForm.controls['empId'].touched\">EmployeeID must be a numerical value.</mat-error>\n                        </mat-form-field>\n                    </mat-card-content>\n                    <mat-card-actions align=\"end\">\n                        <!-- this is the submit button to go to the homepage. if successfull. -->\n                        <button type=\"submit\"\n                                fxFlex\n                                mat-raised-button\n                                [disabled]=\"!loginForm.valid\"\n                                color=\"primary\">Submit</button>\n                    </mat-card-actions>\n                </form>\n            </mat-card>\n        </mat-card-content>\n    </mat-card>\n</div>","/*\n============================================\n; Title: app.component.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: app.component.ts\n;===========================================\n*/\n// this was grabbed from https://github.com/buwebdev/web-450/tree/master/starter-projects/nodebucket\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/*\n============================================\n; Title: app.module.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: App module page\n;===========================================\n*/\n// this was grabbed from https://github.com/buwebdev/web-450/tree/master/starter-projects/nodebucket\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n// Modules being declared.\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n// Components being declared.\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './pages/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    MatMenuModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/*\n============================================\n; Title: base-layout.component.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: baselayout components page\n;===========================================\n*/\n// this was grabbed from https://github.com/buwebdev/web-450/tree/master/starter-projects/nodebucket\nimport { Component, OnInit } from '@angular/core';\n// Importing cookie service\nimport { CookieService } from 'ngx-cookie-service';\n// Importing the router\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\n\nexport class BaseLayoutComponent implements OnInit {\n  // this is to show the current date.\n  year: number = Date.now();\n  \n  constructor(private cookieService: CookieService, private router: Router) {}\n\n  ngOnInit(): void {\n  }\n  // this is to sign out from login\n  signOut() {\n    //  calling the cookie service to delete all entries inside of the cooke inside the browser. -- call the delete all function with the cookie service .\n    this.cookieService.deleteAll();\n    // navigate to the signin page.\n    this.router.navigate(['/session/login']);\n   }\n\n}\n","<!-- this is the base layout html page. -->\n<div fxLayout=\"column\">\n\n    <!-- navigation -->\n    <nav fxFlex>\n      <mat-toolbar>\n        <!-- navbar container -->\n        <div class=\"navbar-container\">\n          <!-- logo -->\n          <button class=\"logo\" routerLink=\"/\" mat-button>nodebucket</button>\n          <button class=\"navbar-link\" routerLink=\"/\" mat-button>Home</button>\n          <button class=\"navbar-link\" mat-button>About</button>\n          <button class=\"navbar-link\" mat-button (click)=\"signOut()\">Sign Out</button>\n        </div>\n  \n      </mat-toolbar>\n    </nav>\n  \n    <!-- main content -->\n    <div fxFlex>\n      <main class=\"main-content\" fxFlex=\"100%;\">\n        <router-outlet></router-outlet>\n      </main>\n    </div>\n  \n    <!-- footer -->\n    <div fxFlex>\n      <footer class=\"footer\">\n        <mat-toolbar class=\"footer-content\">\n          <p>\n            &copy; {{year | date: 'yyyy'}} - nodebucket - <a href=\"https://www.bellevue.edu/\" class=\"bu-link\" target=\"_blank\">Bellevue University</a>\n          </p>\n        </mat-toolbar>\n      </footer>\n    </div>\n  \n  </div>\n  ","/*\n============================================\n; Title: app-routing.module.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: Routing page\n;===========================================\n*/\n// this was grabbed from https://github.com/buwebdev/web-450/tree/master/starter-projects/nodebucket\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\n\n// this is the routes to connect to the different pages. \nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent,\n        canActivate: [AuthGuard]\n      }\n    ]\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path:'login',\n        component: LoginComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled', relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}