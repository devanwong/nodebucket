{"version":3,"sources":["webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/shared/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/auth-layout/auth-layout.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/auth.guard.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/shared/base-layout/base-layout.component.ts","webpack:///src/app/shared/base-layout/base-layout.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","AuthLayoutComponent","environment","production","AuthGuard","router","cookieService","route","state","sessionUser","get","navigate","LoginComponent","fb","http","snackBar","loginForm","group","empId","compose","required","pattern","controls","value","console","log","subscribe","res","set","openSnackBar","message","notificationType","open","duration","verticalPosition","login","AppComponent","AppModule","BaseLayoutComponent","year","Date","now","deleteAll","signOut","routes","path","component","children","canActivate","AppRoutingModule","forRoot","useHash","enableTracing","scrollPositionRestoration","relativeLinkResolution","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["/*\n============================================\n; Title: home.component.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: home component page\n;===========================================\n*/\n// this was auto generated. \nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- this is hte home.html page -->\n<div fxLayout=\"column\" class=\"main-welcome\">\n    <h1 class=\"title\">\n      Welcome to WEB 450's - nodebucket Project <br />\n      <span class=\"subtitle\">\n        Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait until the last minute to begin working on each item.\n      </span>\n    </h1>\n  </div>\n  ","/*\n============================================\n; Title: auth-layout.component.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: auth-layout page\n;===========================================\n*/\n// this was grabbed from https://github.com/buwebdev/web-450/tree/master/starter-projects/nodebucket\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- this is the authlayout page. -->\n<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*\n============================================\n; Title: auth.guard.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: auth guard typescript \n; ng g g auth --> can activate\n;===========================================\n*/\n// This was auto generated \nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n// import cookie service \nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  // adding the constructor so we can import the cookie service \n  constructor(private router: Router, private cookieService: CookieService){}\n\n  // canActivate has to return a true or false value.\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot) //: Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree \n    {\n    // Call the cookieservice with .get() to find the cookie that is added to the browser once the user signs into the app\n    const sessionUser = this.cookieService.get('session_user');\n    // If statement is used to check if something is being returned from the session. If true then there is a user logged in. Else is empty then renavigate to the sign in component.  [needs to have a return false ]\n    if(sessionUser) {\n      return true;\n    }\n     else {\n      this.router.navigate(['/session/login']);\n      return false;\n     }\n  }\n}\n","/*\n============================================\n; Title: login.component.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: login component page\n;===========================================\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private router: Router, private cookieService: CookieService, private http: HttpClient, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      empId: [null, Validators.compose([Validators.required, Validators.pattern('^[0-9]*$')])]\n    })\n  }\n  login() {\n    const empId = this.loginForm.controls['empId'].value;\n    console.log(empId);\n\n    this.http.get('/api/employees/' + empId).subscribe(res => {\n      if (res['data'])\n      {\n        this.cookieService.set('session_user', empId, 1);\n        this.router.navigate(['/']);\n      }\n      else if (!(res['data']) && (res['httpCode'] === '200'))\n      { \n        this.openSnackBar('Invalid employeeId, please try again', 'WARNING');\n      }\n      else \n      {\n        this.openSnackBar(res['message'], 'ERROR');\n      }\n    })\n  }\n  openSnackBar(message: string, notificationType: string) : void\n  {\n    this.snackBar.open(message, notificationType, {\n      duration: 3000,\n      verticalPosition: 'top'\n    })\n  } \n}\n","<!-- this is the login component html page. -->\n<div fxLayout=\"column\">\n    <mat-card fxFlex class=\"mat-elevation-z8 login-container\">\n        <mat-card-title class=\"login-title mat-headline\">Employee Login</mat-card-title>\n        <mat-card-subtitle class=\"login-subtitle mat-headline\">You must enter a valid numerical employeeID to proceed</mat-card-subtitle>\n        <mat-card-content>\n            <mat-card class=\"mat-elevation-z0\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n                <!-- this is the start of the form and will be reset once submit clicks. -->\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login(); loginForm.reset()\">\n                    <mat-card-content>\n                        <mat-form-field fxFlex>\n                            <input matInput\n                                [formControl]=\"loginForm.controls['empId']\"\n                                placeholder=\"EmployeeID\" />\n                                <!-- validation that requires an input field that is connected to the database. -->\n                            <mat-error *ngIf=\"loginForm.controls['empId'].hasError('required') && loginForm.controls['empId'].touched\">EmployeeID is a required field.</mat-error>\n                                <!-- validation that requires only numbers  -->\n                            <mat-error *ngIf=\"loginForm.controls['empId'].hasError('pattern') && loginForm.controls['empId'].touched\">EmployeeID must be a numerical value.</mat-error>\n                        </mat-form-field>\n                    </mat-card-content>\n                    <mat-card-actions align=\"end\">\n                        <!-- this is the submit button to go to the homepage. if successfull. -->\n                        <button type=\"submit\"\n                                fxFlex\n                                mat-raised-button\n                                [disabled]=\"!loginForm.valid\"\n                                color=\"primary\">Submit</button>\n                    </mat-card-actions>\n                </form>\n            </mat-card>\n        </mat-card-content>\n    </mat-card>\n</div>","/*\n============================================\n; Title: app.component.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: app.component.ts\n;===========================================\n*/\n// this was grabbed from https://github.com/buwebdev/web-450/tree/master/starter-projects/nodebucket\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/*\n============================================\n; Title: app.module.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: App module page\n;===========================================\n*/\n// this was grabbed from https://github.com/buwebdev/web-450/tree/master/starter-projects/nodebucket\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n// Modules being declared.\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n// Components being declared.\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './pages/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    MatMenuModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/*\n============================================\n; Title: base-layout.component.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: baselayout components page\n;===========================================\n*/\n// this was grabbed from https://github.com/buwebdev/web-450/tree/master/starter-projects/nodebucket\nimport { Component, OnInit } from '@angular/core';\n// Importing cookie service\nimport { CookieService } from 'ngx-cookie-service';\n// Importing the router\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\n\nexport class BaseLayoutComponent implements OnInit {\n  // this is to show the current date.\n  year: number = Date.now();\n  \n  constructor(private cookieService: CookieService, private router: Router) {}\n\n  ngOnInit(): void {\n  }\n  // this is to sign out from login\n  signOut() {\n    //  calling the cookie service to delete all entries inside of the cooke inside the browser. -- call the delete all function with the cookie service .\n    this.cookieService.deleteAll();\n    // navigate to the signin page.\n    this.router.navigate(['/session/login']);\n   }\n\n}\n","<!-- this is the base layout html page. -->\n<div fxLayout=\"column\">\n\n    <!-- navigation -->\n    <nav fxFlex>\n      <mat-toolbar>\n        <!-- navbar container -->\n        <div class=\"navbar-container\">\n          <!-- logo -->\n          <button class=\"logo\" routerLink=\"/\" mat-button>nodebucket</button>\n          <button class=\"navbar-link\" routerLink=\"/\" mat-button>Home</button>\n          <button class=\"navbar-link\" mat-button>About</button>\n          <button class=\"navbar-link\" mat-button (click)=\"signOut()\">Sign Out</button>\n        </div>\n  \n      </mat-toolbar>\n    </nav>\n  \n    <!-- main content -->\n    <div fxFlex>\n      <main class=\"main-content\" fxFlex=\"100%;\">\n        <router-outlet></router-outlet>\n      </main>\n    </div>\n  \n    <!-- footer -->\n    <div fxFlex>\n      <footer class=\"footer\">\n        <mat-toolbar class=\"footer-content\">\n          <p>\n            &copy; {{year | date: 'yyyy'}} - nodebucket - <a href=\"https://www.bellevue.edu/\" class=\"bu-link\" target=\"_blank\">Bellevue University</a>\n          </p>\n        </mat-toolbar>\n      </footer>\n    </div>\n  \n  </div>\n  ","/*\n============================================\n; Title: app-routing.module.ts\n; Author: Devan Wong\n; Date: 18 March 2021\n; Description: Routing page\n;===========================================\n*/\n// this was grabbed from https://github.com/buwebdev/web-450/tree/master/starter-projects/nodebucket\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\n\n// this is the routes to connect to the different pages. \nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent,\n        canActivate: [AuthGuard]\n      }\n    ]\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path:'login',\n        component: LoginComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled', relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}